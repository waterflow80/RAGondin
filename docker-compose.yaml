services:
  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    volumes:
      - ./qdrant_storage:/qdrant/storage:z
  chainlit-app:
    image: ${IMAGE_NAME}:${TAG}
    container_name: ${CONTAINER_NAME}
    working_dir: /${WORKDIR}
    volumes:
      - ./README.md:/${WORKDIR}/README.md
      - ./pyproject.toml:/${WORKDIR}/pyproject.toml
      - ./poetry.lock:/${WORKDIR}/poetry.lock
      - ./chainlit_app.py:/${WORKDIR}/chainlit_app.py
      - ./fast_api.py:/${WORKDIR}/fast_api.py
      - venv:/${WORKDIR}/${ENVS_PATH}/${VENV_NAME}
      - hydra_config:/${WORKDIR}/${CONFIG_PATH}
      - chainlit_app:/${WORKDIR}/app
      - source:/${WORKDIR}/src
      - pickled_weights:/${WORKDIR}/model_weights
      - visual_assets:/${WORKDIR}/public
      - ./data:/${WORKDIR}/data  # PDF data for RAG


    
    environment:
      - POETRY_VIRTUALENVS_PATH=/${WORKDIR}/${ENVS_PATH}/${VENV_NAME}
      - POETRY_VIRTUALENVS_CREATE=true
      - POETRY_VIRTUALENVS_IN_PROJECT=false
    
    ports:
      - "${APP_PORT}:${APP_PORT}"
    env_file:
      - .env
    
    depends_on:
      - qdrant

    
    command: >
      bash -c "
        echo 'PATH: $PATH' && \
        
        echo 'Installing dependencies...' && \
        poetry env use python3.12 && \
        poetry install --no-interaction -vv --no-root; 

        echo 'Current environment variables:' && \
        printenv && \
        echo 'Container is running. Use docker exec -it RAGondin bash to connect.' && \
        poetry run uvicorn fast_api:app --host ${APP_HOST} --port ${APP_PORT} --reload
      "
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all 
              capabilities: [gpu]


volumes:
  hydra_config:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: './${CONFIG_PATH}'

  venv:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: './${ENVS_PATH}/RAGondin_rag_chainlit'

  chainlit_app:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: './app'

  source:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: './src'


  pickled_weights:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: './model_weights'


  visual_assets:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: './public'
